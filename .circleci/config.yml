version: 2.1
executors:
  packer_builder:
    docker:
      - image: archanium/builder:packer-1.2.5-aws-cli
    working_directory: ~/packer
commands:
  build_packer:
    description: "Build a specific packer image"
    parameters:
      image:
        type: string
      base_image:
        type: string
        default: ""
    steps:
      - checkout
      - attach_workspace:
          at: ~/packer
      - run:
          name: Build << parameters.image >>
          command: ./scripts/build.sh << parameters.image >> << parameters.image >> << parameters.base_image >>
          no_output_timeout: 30m
      - persist_to_workspace:
          root: .
          paths:
            - manifest-<< parameters.image >>.json
      - store_artifacts:
          path: manifest-<< parameters.image >>.json
jobs:
  validate:
    executor: packer_builder
    steps:
      - checkout
      - run:
          name: Validate base
          command: packer validate ./base/base.json
      - run:
          name: Validate main_server
          command: packer validate ./main_server/java_server.json
          environment:
            AMI_BASE: "only-for-validation"
  build-base:
    executor: packer_builder
    steps:
      - build_packer:
          image: base
  build-main_server:
    executor: packer_builder
    steps:
      - build_packer:
          image: main_server
          base_image: base
  build-docker_server:
    executor: packer_builder
    steps:
      - build_packer:
          image: docker_server
          base_image: base
  build-java_server:
    executor: packer_builder
    steps:
      - build_packer:
          image: java_server
          base_image: base
  terraform_plan:
    docker:
      - image: hashicorp/terraform:0.12.10
    working_directory: ~/project
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          working_directory: ~/project/terraform/nginx
          name: Terraform init
          command: terraform init -input=false
      - run:
          working_directory: ~/project/terraform/nginx
          name: Terraform Plan
          command: terraform plan -out=tfplan -input=false
      - store_artifacts:
          path: tfplan
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - validate
      - build-base:
          requires:
            - validate
      - build-java_server:
          requires:
            - validate
            - build-base
#      - build-main_server:
#          requires:
#            - validate
#            - build-base
#      - build-docker_server:
#          requires:
#            - validate
#            - build-base
#      - terraform_plan:
#          requires:
#            - build-main_server
#  build-nightly:
#    triggers:
#      - schedule:
#          cron: "0 0 * * *"
#          filters:
#            branches:
#              only:
#                - master
#    jobs:
#      - validate
#      - build-base:
#          requires:
#            - validate
#      - build-main_server:
#          requires:
#            - validate
#            - build-base
#      - terraform_plan:
#          requires:
#            - build-main_server
